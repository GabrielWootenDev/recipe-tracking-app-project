{"version":3,"sources":["RecipeCreate.js","RecipeView.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","recipes","setRecipes","initialFormState","name","cuisine","photo","ingredients","preparation","useState","formData","setFormData","handleChange","target","value","onSubmit","event","preventDefault","htmlFor","id","onChange","type","required","placeholder","rows","RecipeView","recipeData","deleteRecipe","index","src","alt","className","onClick","RecipeList","map","recipe","key","RecipeData","App","indexToDelete","currentRecipes","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22f7fc35.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({ recipes, setRecipes }) {\n  // initialFormState in our useState and createRecipe handler returns us back to a blank slate whenever the form is submitted.\n  const initialFormState = {\n    name: \"\",\n    cuisine: \"\",\n    photo: \"\",\n    ingredients: \"\",\n    preparation: \"\",\n  };\n\n  const [formData, setFormData] = useState({ ...initialFormState });\n\n  // the handleChange function updates our formData whenever data is changed in one of the form fields, with the target being the form that changed.\n  const handleChange = ({ target }) => {\n    const value = target.value;\n    setFormData({\n      ...formData,\n      [target.name]: value,\n    });\n  };\n\n  // When the form is submitted createRecipe added the data in our formData as a new recipe in the recipes array by creating a new array with the information from both. Then setting our formData back to the initialFormState.\n  const createRecipe = (event) => {\n    event.preventDefault();\n    setRecipes(() => [...recipes, formData]);\n    setFormData({...initialFormState});\n  };\n\n  return (\n    <form name=\"create\" onSubmit={createRecipe}>\n      <table>\n        <tbody>\n          <tr>\n            <td >\n              <label htmlFor=\"name\"></label>\n              <input\n                id=\"name\"\n                name=\"name\"\n                onChange={handleChange}\n                type=\"text\"\n                required={true}\n                value={formData.name}\n                placeholder=\"Name\"\n              />\n            </td>\n            <td>\n              <label htmlFor=\"cuisine\"></label>\n              <input\n                id=\"cuisine\"\n                name=\"cuisine\"\n                onChange={handleChange}\n                type=\"text\"\n                required={true}\n                value={formData.cuisine}\n                placeholder=\"Cuisine\"\n              />\n            </td>\n            <td>\n              <label htmlFor=\"photo\"></label>\n              <input\n                id=\"photo\"\n                name=\"photo\"\n                onChange={handleChange}\n                type=\"url\"\n                required={true}\n                value={formData.photo}\n                placeholder=\"URL\"\n              />\n            </td>\n            <td>\n              <label htmlFor=\"ingredients\"></label>\n              <textarea\n                id=\"ingredients\"\n                name=\"ingredients\"\n                onChange={handleChange}\n                required={true}\n                rows={2}\n                value={formData.ingredients}\n                placeholder=\"Ingredients\"\n              />\n            </td>\n            <td>\n              <label htmlFor=\"preparation\"></label>\n              <textarea\n                id=\"preparation\"\n                name=\"preparation\"\n                onChange={handleChange}\n                required={true}\n                rows={2}\n                value={formData.preparation}\n                placeholder=\"Preparation\"\n              />\n            </td>\n            <td>\n              <button type=\"submit\">Create</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React from \"react\";\r\n\r\nfunction RecipeView({ recipeData, deleteRecipe, index }) {\r\n  const { name, cuisine, photo, ingredients, preparation } = recipeData;\r\n  //This returns us the basic structure of a row of our table filled in with the appropriate information from the props.\r\n  return (\r\n    <tr>\r\n      <td>{name}</td>\r\n      <td>{cuisine}</td>\r\n      <td>\r\n        <img src={photo} alt=\"\"></img>\r\n      </td>\r\n      <td className=\"content_td\">\r\n        <p>{ingredients}</p>\r\n      </td>\r\n      <td className=\"content_td\">\r\n        <p>{preparation}</p>\r\n      </td>\r\n      <td>\r\n        <button name=\"delete\" onClick={() => deleteRecipe(index)}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default RecipeView;\r\n","import React from \"react\";\nimport RecipeView from \"./RecipeView\";\n\nfunction RecipeList({ recipes, deleteRecipe }) {\n  //This is our table structure, passing in the recipe view component with the .map method to create each row for ewach recipe\n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preparation</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {recipes.map((recipe, index) => (\n            <RecipeView\n              deleteRecipe={deleteRecipe}\n              recipeData={recipe}\n              key={index}\n              index={index}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\";\n\nfunction App() {\n  //the state below stores the information of all our recipes and updates when new recipes are submitted in RecipeCreate.\n  const [recipes, setRecipes] = useState(RecipeData);\n\n  //deleteRecipe will delete the recipe in the recipes array with the index that matches the one stored in the delete button that was clicked by filtering the array for every recipe whose index does not match.\n  const deleteRecipe = (indexToDelete) =>\n    setRecipes((currentRecipes) =>\n      currentRecipes.filter((recipe, index) => index !== indexToDelete)\n    );\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Delicious Food Recipes</h1>\n      </header>\n      <RecipeList recipes={recipes} deleteRecipe={deleteRecipe} />\n      <RecipeCreate recipes={recipes} setRecipes={setRecipes}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}